openapi: 3.0.0
info:
  title: Student Management API
  version: 1.1.0
  description: API for managing students, courses, and classes in a school.

servers:
  - url: http://localhost:3000
    description: Express server

paths:
  /users/login:
    post:
      summary: User login
      description: Authenticate a user and obtain a JWT token.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "user1@example.com"
                  description: Email address of the user
                password:
                  type: string
                  example: "password"
                  description: User's password
      responses:
        "200":
          description: Successfully logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "your_jwt_token_here"
                    description: JWT token for authentication
  /schools:
    get:
      summary: Retrieve the list of your schools
      description: View the list of schools that you own.
      tags:
        - School
      responses:
        "200":
          description: Successfully retrieved
      security:
        - BearerAuth: []
      
  /schools/{id}/students:
    get:
      summary: Retrieve the list of students enrolled in one of your schools
      description: View the list of students enrolled in one of your schools.
      tags:
        - School
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identification of the school
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        "200":
          description: Successfully retrieved 
      security:
        - BearerAuth: []
        
  /students:    
    get:
      summary: Retrieve the list of students that are not enrolled in any school
      description: View the list of students with basic information.
      tags:
        - Student
      responses:
        "200":
          description: Successfully retrieved

    post:
      summary: Add new students
      description: Add new students with basic information.
      tags:
        - Student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Student"
      responses:
        "201":
          description: Successfully created
    
  /students/{id}:
    delete:
      summary: Delete a student
      description: Delete a student from the database.
      tags:
        - Student
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identification of the student
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        "200":
          description: Successfully deleted
        "404":
          description: Student not found


  /students/{id}/enroll/{schoolId}:
    post:
      summary: Enroll a student in one of your schools
      description: Enroll a student in one of your schools.
      tags:
        - Enrollment
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identification of the student
          schema:
            type: integer
            format: int64
            example: 1
        - name: schoolId
          in: path
          required: true
          description: Unique identification of the school
          schema:
            type: integer
            format: int64
            example: 1

      responses:
        "201":
          description: Successfully enrolled
        "404":
          description: Student or course not found
      security:
        - BearerAuth: []

  /students/{id}/withdraw/{schoolId}:
    post:
      summary: Withdraw a student from one of your schools
      description: Withdraw a student from one of your schools.
      tags:
        - Enrollment
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identification of the student
          schema:
            type: integer
            format: int64
            example: 1
        - name: schoolId
          in: path
          required: true
          description: Unique identification of the school
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        "200":
          description: Successfully withdrawn
        "404":
          description: Student or course not found
      security:
        - BearerAuth: []

components:
  schemas:
    Student:
      type: object
      properties:
        name:
          type: string
          example: John Doe
          description: Name of the student
        age:
          type: integer
          format: int32
          example: 25
          description: Age of the student
        email:
          type: string
          format: email
          example: "john.doe@example.com"
          description: Email address of the student
        phone:
          type: string
          example: "123-456-7890"
          description: Phone number of the student
        schoolId:
          type: integer
          format: int64
          example: null
          description: Unique identification of the school

    User:
      type: object
      properties:
        email:
          type: string
          format: email
          example: "john.doe@example.com"
          description: Email address of the user
        password:
          type: string
          example: "password123"
          description: User's password (hashed in a real-world scenario)

    School:
      type: object
      properties:
        name:
          type: string
          example: "Harvard University"
          description: Name of the school
        ownerId:
          type: integer
          format: int64
          example: 1
          description: Unique identification of the owner

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT